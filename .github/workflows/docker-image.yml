name: Docker Image CICD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Building image
    runs-on: ubuntu-latest
    steps:
      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time
          
      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'
          
      - name: Checkout
        uses: actions/checkout@v2

      - name: Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: DockerHub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push web image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: markvovn/memora-lars:${{ steps.format-time.outputs.replaced }}
          
      - name: Set output version tag
        id: set_output
        run: echo "::set-output name=version_tag::${{ steps.format-time.outputs.replaced }}"

    outputs:
      version_tag: ${{ steps.set_output.outputs.version_tag }}

  update_server:
    name: Updating prod environment
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Replacing container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOSTNAME }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            export KUBECONFIG=/etc/rancher/rke2/rke2.yaml
            kubectl cluster-info
            kubectl set image deployment/memora-lars memora-lars=markvovn/memora-lars:${{ needs.build.outputs.version_tag }} -n memora
